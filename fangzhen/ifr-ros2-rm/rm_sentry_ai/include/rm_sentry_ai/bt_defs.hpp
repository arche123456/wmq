#ifndef IFR_ROS2_CV__PACKAGE_RM_SENTRY_AI__BT_DEFS__HPP
#define IFR_ROS2_CV__PACKAGE_RM_SENTRY_AI__BT_DEFS__HPP
#include <cstring>
#include <rclcpp/logging.hpp>
#include <string>
#define BTROS_LOGGER this->node_->get_logger()
#define BTROS_CLOCK *this->node_->get_clock()
#define BTROS_NAME this->name()
#define BTROS_CNAME BTROS_NAME.c_str()

#define BTROS_DEBUG(...) RCLCPP_DEBUG(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_ONCE(...) RCLCPP_DEBUG_ONCE(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_EXPRESSION(e, ...) RCLCPP_DEBUG_EXPRESSION(BTROS_LOGGER, e, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_FUNCTION(f, ...) RCLCPP_DEBUG_FUNCTION(BTROS_LOGGER, f, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_SKIPFIRST(...) RCLCPP_DEBUG_SKIPFIRST(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_THROTTLE(d, ...) RCLCPP_DEBUG_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_SKIPFIRST_THROTTLE(d, ...) RCLCPP_DEBUG_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_DEBUG_DF(...) RCLCPP_DEBUG(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_ONCE(...) RCLCPP_DEBUG_ONCE(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_EXPRESSION(e, ...) RCLCPP_DEBUG_EXPRESSION(BTROS_LOGGER, e, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_FUNCTION(f, ...) RCLCPP_DEBUG_FUNCTION(BTROS_LOGGER, f, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_SKIPFIRST(...) RCLCPP_DEBUG_SKIPFIRST(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_THROTTLE(d, ...) RCLCPP_DEBUG_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_DEBUG_DF_SKIPFIRST_THROTTLE(d, ...) RCLCPP_DEBUG_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_DEBUG_STREAM(s) RCLCPP_DEBUG_STREAM(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_ONCE(s) RCLCPP_DEBUG_STREAM_ONCE(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_EXPRESSION(e, s) RCLCPP_DEBUG_STREAM_EXPRESSION(BTROS_LOGGER, e, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_FUNCTION(f, s) RCLCPP_DEBUG_STREAM_FUNCTION(BTROS_LOGGER, f, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_SKIPFIRST(s) RCLCPP_DEBUG_STREAM_SKIPFIRST(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_THROTTLE(d, s) RCLCPP_DEBUG_STREAM_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)
#define BTROS_DEBUG_STREAM_SKIPFIRST_THROTTLE(d, s) RCLCPP_DEBUG_STREAM_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)


#define BTROS_INFO(...) RCLCPP_INFO(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_ONCE(...) RCLCPP_INFO_ONCE(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_EXPRESSION(e, ...) RCLCPP_INFO_EXPRESSION(BTROS_LOGGER, e, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_FUNCTION(f, ...) RCLCPP_INFO_FUNCTION(BTROS_LOGGER, f, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_SKIPFIRST(...) RCLCPP_INFO_SKIPFIRST(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_THROTTLE(d, ...) RCLCPP_INFO_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_SKIPFIRST_THROTTLE(d, ...) RCLCPP_INFO_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_INFO_DF(...) RCLCPP_INFO(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_ONCE(...) RCLCPP_INFO_ONCE(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_EXPRESSION(e, ...) RCLCPP_INFO_EXPRESSION(BTROS_LOGGER, e, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_FUNCTION(f, ...) RCLCPP_INFO_FUNCTION(BTROS_LOGGER, f, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_SKIPFIRST(...) RCLCPP_INFO_SKIPFIRST(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_THROTTLE(d, ...) RCLCPP_INFO_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_INFO_DF_SKIPFIRST_THROTTLE(d, ...) RCLCPP_INFO_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_INFO_STREAM(s) RCLCPP_INFO_STREAM(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_ONCE(s) RCLCPP_INFO_STREAM_ONCE(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_EXPRESSION(e, s) RCLCPP_INFO_STREAM_EXPRESSION(BTROS_LOGGER, e, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_FUNCTION(f, s) RCLCPP_INFO_STREAM_FUNCTION(BTROS_LOGGER, f, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_SKIPFIRST(s) RCLCPP_INFO_STREAM_SKIPFIRST(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_THROTTLE(d, s) RCLCPP_INFO_STREAM_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)
#define BTROS_INFO_STREAM_SKIPFIRST_THROTTLE(d, s) RCLCPP_INFO_STREAM_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)


#define BTROS_WARN(...) RCLCPP_WARN(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_ONCE(...) RCLCPP_WARN_ONCE(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_EXPRESSION(e, ...) RCLCPP_WARN_EXPRESSION(BTROS_LOGGER, e, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_FUNCTION(f, ...) RCLCPP_WARN_FUNCTION(BTROS_LOGGER, f, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_SKIPFIRST(...) RCLCPP_WARN_SKIPFIRST(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_THROTTLE(d, ...) RCLCPP_WARN_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_SKIPFIRST_THROTTLE(d, ...) RCLCPP_WARN_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_WARN_DF(...) RCLCPP_WARN(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_ONCE(...) RCLCPP_WARN_ONCE(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_EXPRESSION(e, ...) RCLCPP_WARN_EXPRESSION(BTROS_LOGGER, e, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_FUNCTION(f, ...) RCLCPP_WARN_FUNCTION(BTROS_LOGGER, f, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_SKIPFIRST(...) RCLCPP_WARN_SKIPFIRST(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_THROTTLE(d, ...) RCLCPP_WARN_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_WARN_DF_SKIPFIRST_THROTTLE(d, ...) RCLCPP_WARN_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_WARN_STREAM(s) RCLCPP_WARN_STREAM(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_ONCE(s) RCLCPP_WARN_STREAM_ONCE(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_EXPRESSION(e, s) RCLCPP_WARN_STREAM_EXPRESSION(BTROS_LOGGER, e, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_FUNCTION(f, s) RCLCPP_WARN_STREAM_FUNCTION(BTROS_LOGGER, f, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_SKIPFIRST(s) RCLCPP_WARN_STREAM_SKIPFIRST(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_THROTTLE(d, s) RCLCPP_WARN_STREAM_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)
#define BTROS_WARN_STREAM_SKIPFIRST_THROTTLE(d, s) RCLCPP_WARN_STREAM_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)


#define BTROS_ERROR(...) RCLCPP_ERROR(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_ONCE(...) RCLCPP_ERROR_ONCE(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_EXPRESSION(e, ...) RCLCPP_ERROR_EXPRESSION(BTROS_LOGGER, e, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_FUNCTION(f, ...) RCLCPP_ERROR_FUNCTION(BTROS_LOGGER, f, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_SKIPFIRST(...) RCLCPP_ERROR_SKIPFIRST(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_THROTTLE(d, ...) RCLCPP_ERROR_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_SKIPFIRST_THROTTLE(d, ...) RCLCPP_ERROR_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_ERROR_DF(...) RCLCPP_ERROR(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_ONCE(...) RCLCPP_ERROR_ONCE(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_EXPRESSION(e, ...) RCLCPP_ERROR_EXPRESSION(BTROS_LOGGER, e, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_FUNCTION(f, ...) RCLCPP_ERROR_FUNCTION(BTROS_LOGGER, f, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_SKIPFIRST(...) RCLCPP_ERROR_SKIPFIRST(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_THROTTLE(d, ...) RCLCPP_ERROR_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_ERROR_DF_SKIPFIRST_THROTTLE(d, ...) RCLCPP_ERROR_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_ERROR_STREAM(s) RCLCPP_ERROR_STREAM(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_ONCE(s) RCLCPP_ERROR_STREAM_ONCE(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_EXPRESSION(e, s) RCLCPP_ERROR_STREAM_EXPRESSION(BTROS_LOGGER, e, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_FUNCTION(f, s) RCLCPP_ERROR_STREAM_FUNCTION(BTROS_LOGGER, f, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_SKIPFIRST(s) RCLCPP_ERROR_STREAM_SKIPFIRST(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_THROTTLE(d, s) RCLCPP_ERROR_STREAM_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)
#define BTROS_ERROR_STREAM_SKIPFIRST_THROTTLE(d, s) RCLCPP_ERROR_STREAM_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)


#define BTROS_FATAL(...) RCLCPP_FATAL(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_ONCE(...) RCLCPP_FATAL_ONCE(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_EXPRESSION(e, ...) RCLCPP_FATAL_EXPRESSION(BTROS_LOGGER, e, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_FUNCTION(f, ...) RCLCPP_FATAL_FUNCTION(BTROS_LOGGER, f, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_SKIPFIRST(...) RCLCPP_FATAL_SKIPFIRST(BTROS_LOGGER, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_THROTTLE(d, ...) RCLCPP_FATAL_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_SKIPFIRST_THROTTLE(d, ...) RCLCPP_FATAL_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, "[%s] " RCLCPP_FIRST_ARG(__VA_ARGS__, ""), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_FATAL_DF(...) RCLCPP_FATAL(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_ONCE(...) RCLCPP_FATAL_ONCE(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_EXPRESSION(e, ...) RCLCPP_FATAL_EXPRESSION(BTROS_LOGGER, e, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_FUNCTION(f, ...) RCLCPP_FATAL_FUNCTION(BTROS_LOGGER, f, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_SKIPFIRST(...) RCLCPP_FATAL_SKIPFIRST(BTROS_LOGGER, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_THROTTLE(d, ...) RCLCPP_FATAL_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))
#define BTROS_FATAL_DF_SKIPFIRST_THROTTLE(d, ...) RCLCPP_FATAL_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, bt_defs::BTROS_MSG_EXPR(BTROS_NAME, RCLCPP_FIRST_ARG(__VA_ARGS__, "")), BTROS_CNAME, RCLCPP_ALL_BUT_FIRST_ARGS(__VA_ARGS__, ""))

#define BTROS_FATAL_STREAM(s) RCLCPP_FATAL_STREAM(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_ONCE(s) RCLCPP_FATAL_STREAM_ONCE(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_EXPRESSION(e, s) RCLCPP_FATAL_STREAM_EXPRESSION(BTROS_LOGGER, e, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_FUNCTION(f, s) RCLCPP_FATAL_STREAM_FUNCTION(BTROS_LOGGER, f, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_SKIPFIRST(s) RCLCPP_FATAL_STREAM_SKIPFIRST(BTROS_LOGGER, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_THROTTLE(d, s) RCLCPP_FATAL_STREAM_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)
#define BTROS_FATAL_STREAM_SKIPFIRST_THROTTLE(d, s) RCLCPP_FATAL_STREAM_SKIPFIRST_THROTTLE(BTROS_LOGGER, BTROS_CLOCK, d, '[' << BTROS_NAME << "] " << s)

#define BTROS_INPUT_OR_FAILED(type, name, field)                                                                  \
    type name;                                                                                                    \
    do {                                                                                                          \
        auto result = getInput<type>(field, name);                                                                \
        if (!result) {                                                                                            \
            static constexpr const auto FILE_NAME = bt_defs::get_filename(__FILE__);                              \
            BTROS_ERROR_STREAM_THROTTLE(1e3, "Failed: " #type " " #name " = getInput<" #type ">(" #field "); // " \
                                                     << FILE_NAME << ":" << __FUNCTION__ << ":" << __LINE__       \
                                                     << ", error = " << result.error());                          \
            return BT::NodeStatus::FAILURE;                                                                       \
        }                                                                                                         \
    } while (0)
#define BTROS_NOTNULL_OR_FAILED(ptr, func)                                                                    \
    auto ptr = func;                                                                                          \
    do {                                                                                                      \
        if (!ptr) {                                                                                           \
            static constexpr const auto FILE_NAME = bt_defs::get_filename(__FILE__);                          \
            BTROS_ERROR_STREAM_THROTTLE(1e3, "nullptr: " #ptr " = " #func "; // "                             \
                                                     << FILE_NAME << ":" << __FUNCTION__ << ":" << __LINE__); \
            return BT::NodeStatus::FAILURE;                                                                   \
        }                                                                                                     \
    } while (0)

namespace bt_defs {
    inline std::string BTROS_MSG_EXPR(const std::string &name, const std::string &msg) {
        std::string s;
        s.reserve(name.size() + msg.size() + 3);
        s.append(std::string::size_type(1), '[');
        s.append(name);
        s.append(std::string::size_type(1), ']');
        s.append(std::string::size_type(1), ' ');
        s.append(msg);
        return s;
    }
    inline std::string BTROS_MSG_EXPR(const std::string &name, const char *msg) {
        std::string s;
        s.reserve(name.size() + std::strlen(msg) + 3);
        s.append(std::string::size_type(1), '[');
        s.append(name);
        s.append(std::string::size_type(1), ']');
        s.append(std::string::size_type(1), ' ');
        s.append(msg);
        return s;
    }

    constexpr const char *get_filename(const char *path) {
        size_t len = 0;
        while (path[len]) ++len;
        while (len > 0) {
            if (path[len - 1] == '/' || path[len - 1] == '\\') return path + len;
            len--;
        }
        return path;
    }
}// namespace bt_defs

#if 0
#include <memory>
#include <rclcpp/node.hpp>
inline bool func() { return true; }
class Test {
    std::shared_ptr<rclcpp::Node> node_;
    std::string name() const { return "Node"; }
    void log() {
        BTROS_INFO("123123123", 1, 2, 3);
        BTROS_INFO_ONCE("", 1, 2, 3);
        BTROS_INFO_EXPRESSION(true, "", 1, 2, 3);
        BTROS_INFO_FUNCTION(::func, "", 1, 2, 3);
        BTROS_INFO_SKIPFIRST("", 1, 2, 3);
        BTROS_INFO_THROTTLE(1, "", 1, 2, 3);
        BTROS_INFO_SKIPFIRST_THROTTLE(1, "", 1, 2, 3);

        std::string msg = "123";
        BTROS_INFO_DF(msg, 1, 2, 3);
        BTROS_INFO_DF_ONCE(msg, 1, 2, 3);
        BTROS_INFO_DF_EXPRESSION(true, msg, 1, 2, 3);
        BTROS_INFO_DF_FUNCTION(::func, msg, 1, 2, 3);
        BTROS_INFO_DF_SKIPFIRST(msg, 1, 2, 3);
        BTROS_INFO_DF_THROTTLE(1, msg, 1, 2, 3);
        BTROS_INFO_DF_SKIPFIRST_THROTTLE(1, msg, 1, 2, 3);

        BTROS_INFO_STREAM("");
        BTROS_INFO_STREAM_ONCE("");
        BTROS_INFO_STREAM_EXPRESSION(true, "");
        BTROS_INFO_STREAM_FUNCTION(::func, "");
        BTROS_INFO_STREAM_SKIPFIRST("");
        BTROS_INFO_STREAM_THROTTLE(1, "");
        BTROS_INFO_STREAM_SKIPFIRST_THROTTLE(1, "");
    }
};
#endif
#endif// IFR_ROS2_CV__PACKAGE_RM_SENTRY_AI__BT_DEFS__HPP
